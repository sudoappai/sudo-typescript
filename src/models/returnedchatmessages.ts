/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ContentPartUnion,
  ContentPartUnion$inboundSchema,
  ContentPartUnion$Outbound,
  ContentPartUnion$outboundSchema,
} from "./contentpartunion.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ReturnedChatMessages = {
  content?: string | null | undefined;
  contentParts?: Array<ContentPartUnion> | null | undefined;
  id: string;
  name?: string | null | undefined;
  role: string;
};

/** @internal */
export const ReturnedChatMessages$inboundSchema: z.ZodType<
  ReturnedChatMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.nullable(z.string()).optional(),
  content_parts: z.nullable(z.array(ContentPartUnion$inboundSchema)).optional(),
  id: z.string(),
  name: z.nullable(z.string()).optional(),
  role: z.string(),
}).transform((v) => {
  return remap$(v, {
    "content_parts": "contentParts",
  });
});

/** @internal */
export type ReturnedChatMessages$Outbound = {
  content?: string | null | undefined;
  content_parts?: Array<ContentPartUnion$Outbound> | null | undefined;
  id: string;
  name?: string | null | undefined;
  role: string;
};

/** @internal */
export const ReturnedChatMessages$outboundSchema: z.ZodType<
  ReturnedChatMessages$Outbound,
  z.ZodTypeDef,
  ReturnedChatMessages
> = z.object({
  content: z.nullable(z.string()).optional(),
  contentParts: z.nullable(z.array(ContentPartUnion$outboundSchema)).optional(),
  id: z.string(),
  name: z.nullable(z.string()).optional(),
  role: z.string(),
}).transform((v) => {
  return remap$(v, {
    contentParts: "content_parts",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReturnedChatMessages$ {
  /** @deprecated use `ReturnedChatMessages$inboundSchema` instead. */
  export const inboundSchema = ReturnedChatMessages$inboundSchema;
  /** @deprecated use `ReturnedChatMessages$outboundSchema` instead. */
  export const outboundSchema = ReturnedChatMessages$outboundSchema;
  /** @deprecated use `ReturnedChatMessages$Outbound` instead. */
  export type Outbound = ReturnedChatMessages$Outbound;
}

export function returnedChatMessagesToJSON(
  returnedChatMessages: ReturnedChatMessages,
): string {
  return JSON.stringify(
    ReturnedChatMessages$outboundSchema.parse(returnedChatMessages),
  );
}

export function returnedChatMessagesFromJSON(
  jsonString: string,
): SafeParseResult<ReturnedChatMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReturnedChatMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReturnedChatMessages' from JSON`,
  );
}
