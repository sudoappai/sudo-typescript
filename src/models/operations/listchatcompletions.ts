/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListChatCompletionsRequest = {
  /**
   * Identifier for the last chat completion from the previous pagination request.
   */
  after?: string | undefined;
  /**
   * Number of Chat Completions to retrieve.
   */
  limit?: number | undefined;
  /**
   * A list of metadata keys to filter the Chat Completions by. Example: metadata[key1]=value1&metadata[key2]=value2
   */
  metadata?: { [k: string]: string } | undefined;
  /**
   * The model used to generate the Chat Completions.
   */
  model?: string | undefined;
  /**
   * Sort order for Chat Completions by timestamp. Use asc for ascending order or desc for descending order. Defaults to asc.
   */
  order?: string | undefined;
};

/** @internal */
export const ListChatCompletionsRequest$inboundSchema: z.ZodType<
  ListChatCompletionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  after: z.string().optional(),
  limit: z.number().int().optional(),
  metadata: z.record(z.string()).optional(),
  model: z.string().optional(),
  order: z.string().optional(),
});

/** @internal */
export type ListChatCompletionsRequest$Outbound = {
  after?: string | undefined;
  limit?: number | undefined;
  metadata?: { [k: string]: string } | undefined;
  model?: string | undefined;
  order?: string | undefined;
};

/** @internal */
export const ListChatCompletionsRequest$outboundSchema: z.ZodType<
  ListChatCompletionsRequest$Outbound,
  z.ZodTypeDef,
  ListChatCompletionsRequest
> = z.object({
  after: z.string().optional(),
  limit: z.number().int().optional(),
  metadata: z.record(z.string()).optional(),
  model: z.string().optional(),
  order: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChatCompletionsRequest$ {
  /** @deprecated use `ListChatCompletionsRequest$inboundSchema` instead. */
  export const inboundSchema = ListChatCompletionsRequest$inboundSchema;
  /** @deprecated use `ListChatCompletionsRequest$outboundSchema` instead. */
  export const outboundSchema = ListChatCompletionsRequest$outboundSchema;
  /** @deprecated use `ListChatCompletionsRequest$Outbound` instead. */
  export type Outbound = ListChatCompletionsRequest$Outbound;
}

export function listChatCompletionsRequestToJSON(
  listChatCompletionsRequest: ListChatCompletionsRequest,
): string {
  return JSON.stringify(
    ListChatCompletionsRequest$outboundSchema.parse(listChatCompletionsRequest),
  );
}

export function listChatCompletionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListChatCompletionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListChatCompletionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListChatCompletionsRequest' from JSON`,
  );
}
