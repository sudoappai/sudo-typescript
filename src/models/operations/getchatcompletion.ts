/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetChatCompletionRequest = {
  /**
   * ID of the chat completion
   */
  completionId: string;
};

/** @internal */
export const GetChatCompletionRequest$inboundSchema: z.ZodType<
  GetChatCompletionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  completion_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "completion_id": "completionId",
  });
});

/** @internal */
export type GetChatCompletionRequest$Outbound = {
  completion_id: string;
};

/** @internal */
export const GetChatCompletionRequest$outboundSchema: z.ZodType<
  GetChatCompletionRequest$Outbound,
  z.ZodTypeDef,
  GetChatCompletionRequest
> = z.object({
  completionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    completionId: "completion_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChatCompletionRequest$ {
  /** @deprecated use `GetChatCompletionRequest$inboundSchema` instead. */
  export const inboundSchema = GetChatCompletionRequest$inboundSchema;
  /** @deprecated use `GetChatCompletionRequest$outboundSchema` instead. */
  export const outboundSchema = GetChatCompletionRequest$outboundSchema;
  /** @deprecated use `GetChatCompletionRequest$Outbound` instead. */
  export type Outbound = GetChatCompletionRequest$Outbound;
}

export function getChatCompletionRequestToJSON(
  getChatCompletionRequest: GetChatCompletionRequest,
): string {
  return JSON.stringify(
    GetChatCompletionRequest$outboundSchema.parse(getChatCompletionRequest),
  );
}

export function getChatCompletionRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetChatCompletionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetChatCompletionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetChatCompletionRequest' from JSON`,
  );
}
