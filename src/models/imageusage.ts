/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ImageInputTokens,
  ImageInputTokens$inboundSchema,
  ImageInputTokens$Outbound,
  ImageInputTokens$outboundSchema,
} from "./imageinputtokens.js";

export type ImageUsage = {
  /**
   * Number of tokens in the input prompt.
   */
  inputTokens: number;
  inputTokensDetails: ImageInputTokens;
  /**
   * Number of tokens used for the generated image.
   */
  outputTokens: number;
  /**
   * Total number of tokens used in the request (input + output).
   */
  totalTokens: number;
};

/** @internal */
export const ImageUsage$inboundSchema: z.ZodType<
  ImageUsage,
  z.ZodTypeDef,
  unknown
> = z.object({
  input_tokens: z.number().int(),
  input_tokens_details: ImageInputTokens$inboundSchema,
  output_tokens: z.number().int(),
  total_tokens: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "input_tokens": "inputTokens",
    "input_tokens_details": "inputTokensDetails",
    "output_tokens": "outputTokens",
    "total_tokens": "totalTokens",
  });
});

/** @internal */
export type ImageUsage$Outbound = {
  input_tokens: number;
  input_tokens_details: ImageInputTokens$Outbound;
  output_tokens: number;
  total_tokens: number;
};

/** @internal */
export const ImageUsage$outboundSchema: z.ZodType<
  ImageUsage$Outbound,
  z.ZodTypeDef,
  ImageUsage
> = z.object({
  inputTokens: z.number().int(),
  inputTokensDetails: ImageInputTokens$outboundSchema,
  outputTokens: z.number().int(),
  totalTokens: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    inputTokens: "input_tokens",
    inputTokensDetails: "input_tokens_details",
    outputTokens: "output_tokens",
    totalTokens: "total_tokens",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageUsage$ {
  /** @deprecated use `ImageUsage$inboundSchema` instead. */
  export const inboundSchema = ImageUsage$inboundSchema;
  /** @deprecated use `ImageUsage$outboundSchema` instead. */
  export const outboundSchema = ImageUsage$outboundSchema;
  /** @deprecated use `ImageUsage$Outbound` instead. */
  export type Outbound = ImageUsage$Outbound;
}

export function imageUsageToJSON(imageUsage: ImageUsage): string {
  return JSON.stringify(ImageUsage$outboundSchema.parse(imageUsage));
}

export function imageUsageFromJSON(
  jsonString: string,
): SafeParseResult<ImageUsage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ImageUsage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ImageUsage' from JSON`,
  );
}
